name: "cpnucleo-default"

# Consolidated common healthcheck configurations.
x-common-healthcheck:
  x-healthcheck-api: &healthcheck-api
    test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
    interval: 30s
    timeout: 10s
    retries: 3
  x-healthcheck-identity: &healthcheck-identity
    test: ["CMD", "curl", "-f", "http://localhost:5010/healthz"]
    interval: 30s
    timeout: 10s
    retries: 3

# Extension defining common configuration for API services in the default configuration.
x-common-api: &common-api
  depends_on:
    db:
      condition: service_healthy
  env_file:
    - .env      
  environment:
    ConnectionStrings__DefaultConnection: ${API_CONNECTION_STRING}

services:
  webapi1-cpnucleo: &webapi1
    <<: *common-api
    image: jonathanperis/cpnucleo-web-api:latest
    container_name: webapi1-cpnucleo
    ports:
      # Mapping internal port 8080 to external host port 5100 for webapi1 service
      - "5100:8080"
    healthcheck: *healthcheck-api

  webapi2-cpnucleo:
    <<: [*webapi1, *common-api]
    container_name: webapi2-cpnucleo
    ports:
      # Mapping internal port 8080 to external host port 5111 for webapi2 service
      - "5111:8080"
      
  identityapi-cpnucleo:
    <<: *common-api
    image: jonathanperis/cpnucleo-identity-api:latest
    container_name: identityapi-cpnucleo
    ports:
      # Mapping internal port 5010 to external host port 5200 for identity API service
      - "5200:5010"
    healthcheck: *healthcheck-identity

  db:
    image: postgres:16.7
    container_name: db-cpnucleo
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5      
    ports:
      # Exposing default PostgreSQL port on both host and container
      - "5432:5432"      
    command: postgres -c checkpoint_timeout=600 -c max_wal_size=4096 -c synchronous_commit=0 -c fsync=0 -c full_page_writes=0

  nginx:
    image: nginx
    container_name: nginx-cpnucleo
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on: 
      - webapi1-cpnucleo
      - webapi2-cpnucleo
      - identityapi-cpnucleo
    ports:
      # Mapping external port 9999 to internal port 9999 for NGINX reverse-proxy
      - "9999:9999"

volumes:
  db_data:
    driver: local
    labels:
      - "com.example.service=cpnucleo-db"

networks:
  default:
    name: cpnucleo_network
    driver: bridge
    driver_opts:
      com.example.description: "Default network for cpnucleo services"