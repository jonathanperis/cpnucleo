name: "cpnucleo-prod"

# Consolidated common healthcheck configurations.
x-common-healthcheck:
  x-healthcheck-api: &healthcheck-api
    test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
    interval: 30s
    timeout: 10s
    retries: 3
  x-healthcheck-identity: &healthcheck-identity
    test: ["CMD", "curl", "-f", "http://localhost:5010/healthz"]
    interval: 30s
    timeout: 10s
    retries: 3
  x-healthcheck-grpcserver: &healthcheck-grpcserver
    test: ["CMD", "curl", "-f", "http://localhost:5020/healthz"]
    interval: 30s
    timeout: 10s
    retries: 3
  x-healthcheck-webclient: &healthcheck-webclient
    test: ["CMD", "curl", "-f", "http://localhost:5030/healthz"]
    interval: 30s
    timeout: 10s
    retries: 3

# Extension defining common API configuration for production.
x-common-api-prod: &common-api-prod
  depends_on:
    db:
      condition: service_healthy
  env_file:
    - .env      
  environment:
    ConnectionStrings__DefaultConnection: ${API_CONNECTION_STRING}
    ASPNETCORE_ENVIRONMENT: Production
  restart: always
  deploy:
    resources:
      limits:
        cpus: "0.50"
        memory: "512M"
      reservations:
        cpus: "0.25"
        memory: "256M"    

# Common logging options for production services.
x-common-logging: &common-logging
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"

services:
  webapi1-cpnucleo: &webapi1
    <<: [*common-api-prod, *common-logging]
    image: jonathanperis/cpnucleo-web-api:latest
    container_name: webapi1-cpnucleo
    ports:
      # Production port mapping: host port 5100 is forwarded to container port 8080
      - "5100:8080"
    healthcheck: *healthcheck-api

  webapi2-cpnucleo:
    <<: [*webapi1, *common-api-prod, *common-logging]
    container_name: webapi2-cpnucleo
    ports:
      # Production port mapping: host port 5111 is forwarded to container port 8080
      - "5111:8080"

  identityapi-cpnucleo:
    <<: [*common-api-prod, *common-logging]
    image: jonathanperis/cpnucleo-identity-api:latest
    container_name: identityapi-cpnucleo
    ports:
      # Production port mapping: host port 5200 is forwarded to container port 5010
      - "5200:5010"
    healthcheck: *healthcheck-identity

  grpcserver-cpnucleo:
    <<: [*common-api-prod, *common-logging]
    image: jonathanperis/cpnucleo-grpc-server:latest
    container_name: grpcserver-cpnucleo
    ports:
      # Production port mapping: host port 5300 is forwarded to container port 5020
      - "5300:5020"
    healthcheck: *healthcheck-grpcserver
    
  webclient-cpnucleo:
    <<: [*common-logging]
    image: jonathanperis/cpnucleo-web-client:latest
    container_name: weblient-cpnucleo
    ports:
      # Production port mapping: host port 5400 is forwarded to container port 5030
      - "5400:5030"
    healthcheck: *healthcheck-webclient    
    env_file:
      - .env      
    environment:
      ASPNETCORE_ENVIRONMENT: Production
    restart: always
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: "512M"
        reservations:
          cpus: "0.25"
          memory: "256M"
          
  db:
    image: postgres:16.7
    container_name: db-cpnucleo
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5 
    ports:
      # Exposing PostgreSQL port consistently on host and container
      - "5432:5432"
    command: postgres -c checkpoint_timeout=600 -c max_wal_size=4096 -c synchronous_commit=0 -c fsync=0 -c full_page_writes=0
    restart: always
    deploy:
      resources:
        limits:
          cpus: "1.00"
          memory: "1G"
        reservations:
          cpus: "0.50"
          memory: "512M"
    <<: *common-logging

  nginx:
    image: nginx
    container_name: nginx-cpnucleo
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - webapi1-cpnucleo
      - webapi2-cpnucleo
      - identityapi-cpnucleo
    ports:
      # Production mapping: host port 9999 is forwarded to container port 9999 for NGINX
      - "9999:9999"
    restart: always
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "256M"
        reservations:
          cpus: "0.10"
          memory: "128M"
    <<: *common-logging

volumes:
  db_data:
    driver: local
    labels:
      - "com.example.service=cpnucleo-db"

networks:
  default:
    name: cpnucleo_network
    driver: bridge
    driver_opts:
      com.example.description: "Default network for cpnucleo services"