name: "cpnucleo-prod"

# Extension defining common API configuration for production.
x-common-api-prod: &common-api-prod
  depends_on:
    db:
      condition: service_healthy
  env_file:
    - .env      
  environment:
    ConnectionStrings__DefaultConnection: ${API_CONNECTION_STRING}
    ASPNETCORE_ENVIRONMENT: Production
  restart: always

services:
  webapi1-cpnucleo:
    <<: *common-api-prod
    image: jonathanperis/cpnucleo-web-api:latest
    container_name: webapi1-cpnucleo
    ports:
      - "5100:8080"
    networks:
      - cpnucleo_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: "512M"
        reservations:
          cpus: "0.25"
          memory: "256M"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  webapi2-cpnucleo:
    <<: *common-api-prod
    image: jonathanperis/cpnucleo-web-api:latest
    container_name: webapi2-cpnucleo
    ports:
      - "5111:8080"
    networks:
      - cpnucleo_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: "512M"
        reservations:
          cpus: "0.25"
          memory: "256M"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  identityapi-cpnucleo:
    <<: *common-api-prod
    image: jonathanperis/cpnucleo-identity-api:latest
    container_name: identityapi-cpnucleo
    ports:
      - "5200:5050"
    networks:
      - cpnucleo_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5050/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: "512M"
        reservations:
          cpus: "0.25"
          memory: "256M"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  db:
    image: postgres:16.7
    container_name: db-cpnucleo
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5 
    ports:
      - "5432:5432"
    command: postgres -c checkpoint_timeout=600 -c max_wal_size=4096 -c synchronous_commit=0 -c fsync=0 -c full_page_writes=0
    restart: always
    networks:
      - cpnucleo_network
    deploy:
      resources:
        limits:
          cpus: "1.00"
          memory: "1G"
        reservations:
          cpus: "0.50"
          memory: "512M"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: nginx
    container_name: nginx-cpnucleo
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - webapi1-cpnucleo
      - webapi2-cpnucleo
      - identityapi-cpnucleo
    ports:
      - "9999:9999"
    restart: always
    networks:
      - cpnucleo_network
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "256M"
        reservations:
          cpus: "0.10"
          memory: "128M"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        
volumes:
  db-data:
    driver: local

networks:
  cpnucleo_network:
    driver: bridge