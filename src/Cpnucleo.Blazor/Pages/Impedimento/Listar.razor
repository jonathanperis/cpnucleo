@page "/impedimento/listar"
@inject IJSRuntime JS;
@inject ICpnucleoApiService cpnucleoApiService;

<PageTitle>CPN - Relação de Impedimentos</PageTitle>

<div class="row">
    <div class="col-lg-12">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <h5>Relação de Impedimentos</h5>
                <div class="ibox-tools">
                    <a class="fullscreen-link">
                        <i class="fa fa-expand"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content"> 
                <a class="btn btn-primary btn-sm" role="button" href="/impedimento/incluir">+ Impedimento</a>
                <br /><br />                

                @if (impedimentos == null)
                {
                    <p><em>Carregando...</em></p>
                }
                else
                {
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered table-hover table-datatable">
                            <thead>
                                <tr>
                                    <th><DisplayName For="@(() => impedimento.Id)" /></th>
                                    <th><DisplayName For="@(() => impedimento.Nome)" /></th>
                                    <th><DisplayName For="@(() => impedimento.DataInclusao)" /></th>
                                    @if (impedimentos.Count() > 0)
                                    {
                                        <th class="no-sort"></th>
                                        <th class="no-sort"></th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in impedimentos)
                                {
                                    <tr>
                                        <td>@item.Id</td>
                                        <td>@item.Nome</td>
                                        <td>@item.DataInclusao.ToString("dd/MM/yyyy")</td>
                                        @if (impedimentos.Count() > 0)
                                        {
                                            <td style="text-align: center">
                                                <a class="btn btn-outline btn-warning btn-xs" role="button" href="/impedimento/alterar/@item.Id">Alterar</a>
                                            </td>
                                            <td style="text-align: center">
                                                <a class="btn btn-outline btn-danger btn-xs" role="button" href="/impedimento/remover/@item.Id">Remover</a>
                                            </td>
                                        }
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th><DisplayName For="@(() => impedimento.Id)" /></th>
                                    <th><DisplayName For="@(() => impedimento.Nome)" /></th>
                                    <th><DisplayName For="@(() => impedimento.DataInclusao)" /></th>
                                    @if (impedimentos.Count() > 0)
                                    {
                                        <th></th>
                                        <th></th>
                                    }
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private ImpedimentoViewModel impedimento;
    private IEnumerable<ImpedimentoViewModel> impedimentos;

    protected override async Task OnInitializedAsync()
    {
        impedimentos = await cpnucleoApiService.GetAsync<IEnumerable<ImpedimentoViewModel>>("impedimento", "");

        await JS.InvokeVoidAsync("dataTables", "Relação de Impedimentos");
    }
}