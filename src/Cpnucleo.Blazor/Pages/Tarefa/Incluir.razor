@page "/tarefa/incluir"
@inject ICpnucleoApiClient cpnucleoApiClient;
@inject NavigationManager navigationManager;

<PageTitle>CPN - Inclusão de Tarefa</PageTitle>

<div class="col-lg-12">
    <div class="ibox float-e-margins">
        <div class="ibox-title">
            <h5>Inclusão de Tarefa</h5>
            <div class="ibox-tools">
                <a class="fullscreen-link">
                    <i class="fa fa-expand"></i>
                </a>
            </div>
        </div>
        <div class="ibox-content">

            <EditForm class="form-horizontal" Model="@model" OnValidSubmit="@HandleValidSubmit">
                <DataAnnotationsValidator />

                <input type="hidden" @bind="model.IdRecurso" />

                <div class="form-group">
                    <label class="col-sm-2 control-label"><DisplayName For="@(() => model.Nome)" /></label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" @bind="model.Nome" placeholder="Nome" />
                        <ValidationMessage For="@(() => model.Nome)" />
                    </div>
                </div>
                <div class="hr-line-dashed"></div>
                <div class="form-group">
                    <label class="col-sm-2 control-label"><DisplayName For="@(() => model.IdProjeto)" /></label>
                    <div class="col-sm-10">
                        <select class="form-control m-b" @bind="model.IdProjeto">
                            @foreach (var item in projetos)
                            {
                                <option value="@item.Id">@item.Nome</option>
                            }
                        </select>
                        <ValidationMessage For="@(() => model.IdProjeto)" />
                    </div>
                </div>
                <div class="hr-line-dashed"></div>
                <div class="form-group">
                    <label class="col-sm-2 control-label"><DisplayName For="@(() => model.DataInicio)" /></label>
                    <div class="col-sm-10">
                        <input type="date" class="form-control" @bind="model.DataInicio" placeholder="Data de Início">
                        <ValidationMessage For="@(() => model.DataInicio)" />
                    </div>
                </div>
                <div class="hr-line-dashed"></div>
                <div class="form-group">
                    <label class="col-sm-2 control-label"><DisplayName For="@(() => model.DataTermino)" /></label>
                    <div class="col-sm-10">
                        <input type="date" class="form-control" @bind="model.DataTermino" placeholder="Data de Término">
                        <ValidationMessage For="@(() => model.DataTermino)" />
                    </div>
                </div>
                <div class="hr-line-dashed"></div>
                <div class="form-group">
                    <label class="col-sm-2 control-label"><DisplayName For="@(() => model.QtdHoras)" /><br><small class="text-navy">Horas</small></label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" @bind="model.QtdHoras" placeholder="Tempo Estimado">
                        <ValidationMessage For="@(() => model.QtdHoras)" />
                    </div>
                </div>
                <div class="hr-line-dashed"></div>
                <div class="form-group">
                    <label class="col-sm-2 control-label"><DisplayName For="@(() => model.Detalhe)" /></label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" @bind="model.Detalhe" placeholder="Detalhe">
                        <ValidationMessage For="@(() => model.Detalhe)" />
                    </div>
                </div>
                <div class="hr-line-dashed"></div>
                <div class="form-group">
                    <label class="col-sm-2 control-label"><DisplayName For="@(() => model.IdTipoTarefa)" /></label>
                    <div class="col-sm-10">
                        <select class="form-control m-b" @bind="model.IdTipoTarefa">
                            @foreach (var item in tipoTarefas)
                            {
                                <option value="@item.Id">@item.Nome</option>
                            }
                        </select>
                        <ValidationMessage For="@(() => model.IdTipoTarefa)" />
                    </div>
                </div>
                <div class="hr-line-dashed"></div>
                <div class="form-group">
                    <label class="col-sm-2 control-label"><DisplayName For="@(() => model.IdWorkflow)" /></label>
                    <div class="col-sm-10">
                        <select class="form-control m-b" @bind="model.IdWorkflow">
                            @foreach (var item in workflows)
                            {
                                <option value="@item.Id">@item.Nome</option>
                            }
                        </select>
                        <ValidationMessage For="@(() => model.IdWorkflow)" />
                    </div>
                </div>
                <div class="hr-line-dashed"></div>
                <div class="form-group">
                    <div class="col-sm-4 col-sm-offset-2">
                        <a class="btn btn-white" role="button" href="/tarefa/listar">Voltar</a>
                        <button class="btn btn-primary" type="submit">Incluir</button>
                    </div>
                </div>

            </EditForm>
        </div>
    </div>
</div>

@code {
    private TarefaDTO model = new TarefaDTO();
    private IEnumerable<ProjetoDTO> projetos;
    private IEnumerable<WorkflowDTO> workflows;
    private IEnumerable<TipoTarefaDTO> tipoTarefas;

    protected override async Task OnInitializedAsync()
    {
        model.IdRecurso = new Guid("dcde1113-ab83-489e-ac0c-d7de2caa2279");

        projetos = await cpnucleoApiClient.GetAsync<IEnumerable<ProjetoDTO>>("projeto", "");
        model.IdProjeto = projetos.FirstOrDefault().Id;

        workflows = await cpnucleoApiClient.GetAsync<IEnumerable<WorkflowDTO>>("workflow", "");
        model.IdWorkflow = workflows.FirstOrDefault().Id;

        tipoTarefas = await cpnucleoApiClient.GetAsync<IEnumerable<TipoTarefaDTO>>("tipoTarefa", "");
        model.IdTipoTarefa = tipoTarefas.FirstOrDefault().Id;
    }

    private async Task HandleValidSubmit()
    {
        await cpnucleoApiClient.PostAsync<TarefaDTO>("tarefa", "", model);

        navigationManager.NavigateTo("/tarefa/listar");
    }
}