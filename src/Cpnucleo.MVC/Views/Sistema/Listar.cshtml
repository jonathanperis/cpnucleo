@model SistemaViewModel
@{
    ViewData["Title"] = "Relação de Sistemas";
}

@inject IConfiguration configuration;

@section Styles {
<!-- DataTables -->
<link href="https://cpnucleo-assets.azurewebsites.net/css/plugins/dataTables/datatables.min.css" rel="stylesheet">
}

<div class="row">
    <div class="col-lg-12">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <h5>@ViewData["Title"]</h5>
                <div class="ibox-tools">
                    <a class="fullscreen-link">
                        <i class="fa fa-expand"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">

                <a class="btn btn-primary btn-sm" role="button" asp-action="Incluir">+ Sistema</a>
                <br /><br />

                @if (!ViewData.ModelState.IsValid)
                {
                    <div asp-validation-summary="All" class="alert alert-danger alert-dismissible" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    </div>
                }
                else
                {
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered table-hover table-datatable">
                            <thead>
                                <tr>
                                    <th>@Html.DisplayNameFor(x => x.Sistema.Id)</th>
                                    <th>@Html.DisplayNameFor(x => x.Sistema.Nome)</th>
                                    <th>@Html.DisplayNameFor(x => x.Sistema.Descricao)</th>
                                    <th>@Html.DisplayNameFor(x => x.Sistema.DataInclusao)</th>
                                    @if (Model.Lista.Count() > 0)
                                    {
                                        <th class="no-sort"></th>
                                        <th class="no-sort"></th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Lista)
                                {
                                    <tr>
                                        <td>@item.Id</td>
                                        <td>@item.Nome</td>
                                        <td>@item.Descricao</td>
                                        <td>@item.DataInclusao.ToString("dd/MM/yyyy")</td>
                                        @if (Model.Lista.Count() > 0)
                                        {
                                            <td style="text-align: center">
                                                <a class="btn btn-outline btn-warning btn-xs" role="button" asp-action="Alterar" asp-route-id="@item.Id">Alterar</a>
                                            </td>
                                            <td style="text-align: center">
                                                <a class="btn btn-outline btn-danger btn-xs" role="button" asp-action="Remover" asp-route-id="@item.Id">Remover</a>
                                            </td>
                                        }
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th>@Html.DisplayNameFor(x => x.Sistema.Id)</th>
                                    <th>@Html.DisplayNameFor(x => x.Sistema.Nome)</th>
                                    <th>@Html.DisplayNameFor(x => x.Sistema.Descricao)</th>
                                    <th>@Html.DisplayNameFor(x => x.Sistema.DataInclusao)</th>
                                    @if (Model.Lista.Count() > 0)
                                    {
                                        <th></th>
                                        <th></th>
                                    }
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
<!-- DataTables -->
<script src="https://cpnucleo-assets.azurewebsites.net/js/plugins/dataTables/datatables.min.js"></script>
<!--Reference the SignalR library. -->
<script src="~/lib/signalr/signalr.min.js"></script>
<script>
    $(document).ready(function () {
        $('.table-datatable').DataTable({
            language: {
                "lengthMenu": "Mostrando _MENU_ registros por página",
                "zeroRecords": "Nenhum registro encontrado",
                "info": "Mostrando página _PAGE_ de _PAGES_",
                "infoEmpty": "Não há registros disponíveis",
                "infoFiltered": "(filtrando de _MAX_ registros totais)",
                "search": "Buscar",
                "loadingRecords": "Carregando...",
                "processing": "Processando...",
                "paginate": {
                    "first": "Primeira",
                    "last": "Ultima",
                    "next": "Próxima",
                    "previous": "Anterior"
                }
            },
            pageLength: 10,
            responsive: true,
            dom: '<"html5buttons"B>lTfgitp',
            buttons: [
                { extend: 'copy', text: 'Copiar', exportOptions: { columns: [0, 1, 2, 3] } },
                //{extend: 'csv', title: 'Relação de Sistemas', exportOptions: { columns: [0, 1, 2, 3] }},
                { extend: 'excel', title: 'Relação de Sistemas', exportOptions: { columns: [0, 1, 2, 3] } },
                { extend: 'pdf', title: 'Relação de Sistemas', exportOptions: { columns: [0, 1, 2, 3] } },
                {
                    extend: 'print', text: 'Imprimir', exportOptions: { columns: [0, 1, 2, 3] },
                    customize: function (win) {
                        $(win.document.body).addClass('white-bg');
                        $(win.document.body).css('font-size', '10px');

                        $(win.document.body).find('table')
                            .addClass('compact')
                            .css('font-size', 'inherit');
                    }
                }
            ],
            "columnDefs": [{
                "targets": 'no-sort',
                "orderable": false,
            }]
        });
    });

    const connection = new signalR.HubConnectionBuilder()
        .withUrl("@configuration["AppSettings:UrlCpnucleoGrpcSistema"]/hub")
        .withAutomaticReconnect()
        .build();

    bindConnectionMessage(connection);

    Object.defineProperty(WebSocket, 'OPEN', { value: 1, });

    connection.start()
        .then(() => onConnected(connection))
        .catch(error => console.error(error.message));

    function bindConnectionMessage(connection) {

        //Incoming messages.
        connection.on('broadcastMessage', (name, message) => {

            console.log('received message: ' + name, message)
        });

        connection.on('echo', (name, message) => {

            console.log('received message: ' + name, message)
        });
    }

    function onConnected(connection) {

        //Sent messages.
        connection.send('echo', 'Echo: Test Message.', 'Lorem ipsum dolor sit amet');
    }
</script>
}