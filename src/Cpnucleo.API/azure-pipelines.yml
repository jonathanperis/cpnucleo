trigger:
- master
pr:
- master

variables:
  solution: '**/*.sln'
  project: '**/Cpnucleo.API/*.csproj'
  buildConfiguration: 'Release'  

pool:
  vmImage: 'ubuntu-20.04'

name: $(date:yyyyMMdd)$(rev:.r)

steps:

- task: UseDotNet@2
  displayName: Install .NET SDK
  inputs:
    useGlobalJson: true
    includePreviewVersions: true

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: 'restore'
    projects: '$(project)'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    projects: '$(project)'
    arguments: '--configuration $(buildConfiguration)'

- powershell: |
   dotnet tool install --global dotnet-ef --ignore-failed-sources
   dotnet-ef database update --connection "Data Source=Cpnucleo.db"
  workingDirectory: '$(System.DefaultWorkingDirectory)/src/Cpnucleo.Infra.Data/'
  displayName: 'Generate Database Migrations'

- task: CopyFiles@2
  inputs:
    sourceFolder: '$(System.DefaultWorkingDirectory)/src/Cpnucleo.Infra.Data/'
    contents: 'Cpnucleo.db' 
    targetFolder: '$(build.artifactstagingdirectory)/Cpnucleo.API'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: 'test'
    projects: '**/*.Test/*.csproj'

- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    publishWebProjects: false
    projects: '$(project)'
    arguments: --configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)
    zipAfterPublish: true

# Archive files
# Compress files into .7z, .tar.gz, or .zip
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(build.artifactstagingdirectory)/Cpnucleo.API' 
    includeRootFolder: false 
    archiveType: 'zip'
    #tarCompression: 'gz' # Optional. Options: gz, bz2, xz, none
    archiveFile: '$(build.artifactstagingdirectory)/Cpnucleo.API.zip' 
    #replaceExistingArchive: true 
    #verbose: # Optional
    #quiet: # Optional

- powershell: |
   ls
  workingDirectory: $(build.artifactstagingdirectory)
  displayName: 'List Files 4'

# Delete files
# Delete folders, or files matching a pattern
- task: DeleteFiles@1
  inputs:
    SourceFolder: # Optional
    Contents: '$(build.artifactstagingdirectory)/Cpnucleo.API' 
    #RemoveSourceFolder: # Optional

- powershell: |
   ls
  workingDirectory: $(build.artifactstagingdirectory)
  displayName: 'List Files 5'

- task: PublishBuildArtifacts@1
  displayName: Publish Artifact
  inputs:
    PathtoPublish: $(build.artifactstagingdirectory)
    TargetPath: '\\my\share\$(Build.DefinitionName)\$(Build.BuildNumber)'